%% Variables of interest
N = 100; 
depth_vs_time = zeros(1, N);
y_vs_time = zeros(1, N); 
x_vs_time = zeros(1, N); 

% Open the Kinect Video object
vid = videoinput('kinect',1,'RGB_640x480');
vid2 = videoinput('kinect', 2, 'Depth_640x480');

% Set the properties of the video object
NUM_FRAMES = N; 
vid.FramesPerTrigger = NUM_FRAMES; % Use  help imaqhelp to find these props
vid2.FramesPerTrigger = NUM_FRAMES;

% Acquire data into memory before logging it
colorVid = videoinput('kinect',1); 
depthVid = videoinput('kinect',2);

% Set the triggering mode to 'manual'
triggerconfig([colorVid depthVid],'manual');
colorVid.FramesPerTrigger = 1;
depthVid.FramesPerTrigger = 1;

% Start the color and depth device. This begins acquisition, but does not
% start logging of acquired data.
start([colorVid depthVid]);

% Trigger the devices to start logging of data.
trigger([colorVid depthVid]);

% Retrieve the acquired data
[rgb_image,colorTimeData,colorMetaData] = getdata(colorVid);
[depth_image,depthTimeData,depthMetaData] = getdata(depthVid);

% Select the colored region to track
hsv_image = rgb2hsv(rgb_image); 
shapeInserter = vision.ShapeInserter('BorderColor','Custom','CustomBorderColor',[1 0 0]);
tracker = vision.HistogramBasedTracker;
figure; imshow(rgb_image); objectRegion=round(getPosition(imrect));
initializeObject(tracker, hsv_image(:, :, 1), objectRegion)

% Initalize the depth tracking figure
figure; subplot(1, 2, 1); dax = line(nan, nan);
title('Depth vs time') 
xlabel('Time (s)')
ylabel('Depth (pixels)')

t0 = tic; 
t = [0];
for i = 1:N
    % Trigger the devices to start logging of data.
    trigger([colorVid depthVid]);

    % Retrieve the acquired data
    [rgb_frame,colorTimeData,colorMetaData] = getdata(colorVid);
    [depth_frame,depthTimeData,depthMetaData] = getdata(depthVid);
	
	% Extend the time array
	if(i > 1)
        toc(t0)
		t = [t toc(t0)];
	end
    
    % Find the bounding box for the selected object
    hsv = rgb2hsv(rgb_frame);                   
    bbox = step(tracker, hsv(:,:,1));  
    x = bbox(1); 
    y = bbox(2); 
    width = bbox(3); 
    height = bbox(4); 
    
    % Draw the bounding box around the region
    J = step(shapeInserter, rgb_frame, int32(bbox'));
    imshow(J)
    % imshow(depth_frame)
    
    % Compute the average depth of the pixels
    c = [x x (x+width) (x+width)]; 
    r = [y (y+height) (y+height) y]; 
    x_vs_time(i) = x;
    y_vs_time(i) = y; 
    BW = roipoly(rgb_frame,c,r);
    idx = find(BW); 
    depth_vs_time(i) = mean(depth_frame(idx)); 
	
	% Plot the results
	plot(t, depth_vs_time(1:i));
end

% Clear up the workspace
delete(vid)
delete(vid2)
clear vid
clear vid2
